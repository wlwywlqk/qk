Program -> Statements        # $.statements = $$[0];

Expression -> AssignExpression                               # $.value = $$[0];
    | BoolExpression                                         # $.value = $$[0];
    | EqualityExpression                                     # $.value = $$[0];
    | RelExpression                                          # $.value = $$[0];
    | ArithExpression                                        # $.value = $$[0];
    | UnaryExpression                                        # $.value = $$[0];
    | ParenthesisExpression                                  # $.value = $$[0];
    | id                                                     # $.value = $$[0];
    | num                                                    # $.value = $$[0];
    | str                                                    # $.value = $$[0];
    | true                                                   # $.value = $$[0];
    | false                                                  # $.value = $$[0];
AssignExpression -> id = Expression                          # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];                   
BoolExpression -> Expression || Expression                   # $.left = $$[0]; $.op = $$[1]; $.right = $$[2]; 
    | Expression && Expression                               # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
EqualityExpression -> Expression == Expression               # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    |= Expression != Expression                              # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
RelExpression -> Expression < Expression                     # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    |= Expression <= Expression                              # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    |= Expression > Expression                               # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    |= Expression >= Expression                              # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];

ArithExpression -> Expression + Expression                   # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    |= Expression - Expression                               # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    | Expression * Expression                                # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
    |= Expression / Expression                               # $.left = $$[0]; $.op = $$[1]; $.right = $$[2];
UnaryExpression -> ! Expression    %right                    # $.op = $$[0]; $.right = $$[1];
    |= - Expression       %right                             # $.op = $$[0]; $.right = $$[1];
    |= + Expression       %right                             # $.op = $$[0]; $.right = $$[1];
ParenthesisExpression -> ( Expression )                      # $.value = $$[1];

Statements -> Statements Statement                           # if ($$[0]) { $.statements = $$[0].statements.concat([$$[1]]); } else { $.statements = [$$[1]]; }
    | Îµ
Statement -> DeclarationStatement                            # $.statement = $$[0];
    | ExpressionStatement                                    # $.statement = $$[0];
    | IfStatement                                            # $.statement = $$[0];
    | WhileStatement                                         # $.statement = $$[0];
    | DoWhileStatement                                       # $.statement = $$[0];
    | BlockStatement                                         # $.statement = $$[0];

DeclarationStatement -> Type id                              # $.type = $$[0]; $.name = $$[1];
    | Type id = Expression                                   # $.type = $$[0]; $.name = $$[1]; $.value = $$[3];
Type -> var                                                  # $.kind = $$[0];
ExpressionStatement -> Expression                            # $.expression = $$[0];
IfStatement -> if ( Expression ) BlockStatement              # $.expression = $$[2]; $.then = $$[4];
    | if ( Expression ) BlockStatement else BlockStatement   # $.expression = $$[2]; $.then = $$[4]; $.else = $$[6];
    | if ( Expression ) BlockStatement else IfStatement      # $.expression = $$[2]; $.then = $$[4]; $.else = $$[6];
WhileStatement -> while ( Expression ) BlockStatement        # $.expression = $$[2]; $.statement = $$[4];
DoWhileStatement -> do BlockStatement while ( Expression )   # $.expression = $$[4]; $.statement = $$[1];
BlockStatement -> { Statements }                             # $.statements = $$[1];